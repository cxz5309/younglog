{"version":3,"sources":["components/Home/PopularList/Post.js","components/Home/PopularList/PopularList.js","components/Home/RecentList/Post.js","components/Home/RecentList/RecentList.js","components/Header.js","components/Home/Headline/Headline.js","components/Footer.js","pages/Home.js","pages/About.js","pages/Post.js","pages/Posts.js","pages/CreatePost.js","pages/UpdatePost.js","components/Comment/Comment.js","pages/DetailPost.js","components/ListPost/Post.js","pages/ListPost.js","pages/Join.js","pages/Login.js","App.js","reportWebVitals.js","index.js"],"names":["Post","state","readyPost","uid","userName","userPwd","title","description","thumbnail","date","views","this","setState","props","data","id","username","to","className","Component","PopularList","datas","map","index","Date","valueOf","RecentList","Header","library","add","fas","faBars","src","alt","length","onClick","logout","icon","size","Headline","Footer","fab","faGithub","faEnvelope","href","Home","localStorage","removeItem","alert","window","location","reload","getMe","a","axios","get","headers","authorization","getItem","then","res","user","Error","console","log","catch","error","getList","pList","popularList","rList","recentList","response","message","history","push","popularData","recentData","match","query","queryString","parse","search","params","name","detail","Posts","url","exact","path","render","component","CreatePost","handleSubmit","e","preventDefault","payload","FormData","append","set","post","handleChange","target","value","onImgChange","files","thumbnailUrl","onSubmit","type","onChange","accept","UpdatePost","getPost","submitType","patch","delete","Comment","handleClick","commentState","readyUpdateContent","comment","contents","submitUpdate","token","submitDelete","param","writer","renderSwitch","DetailPost","getComments","readyComments","comments","postId","CreateComment","myComment","RemoveThisComment","postUserName","undefined","ListPost","sortType","postList","Join","register","readyUser","password","confirmPassword","placeholder","Login","login","setItem","App","About","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.801003e2.chunk.js","sourcesContent":["import { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Post extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      readyPost: {\r\n        uid: \"\",\r\n        userName: \"\",\r\n        userPwd: \"\",\r\n        title: \"\",\r\n        description: \"\",\r\n        thumbnail: \"\",\r\n        date: \"\",\r\n        views: 0,\r\n      },\r\n    };\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    this.setState({ readyPost: this.props.data })\r\n  }\r\n\r\n  render() {\r\n    const id = this.state.readyPost.uid;\r\n    const title = this.state.readyPost.title;\r\n    const date = this.state.readyPost.date;\r\n    const username = this.state.readyPost.userName;\r\n    const description = this.state.readyPost.description;\r\n    const thumbnail = this.state.readyPost.thumbnail;\r\n    return (\r\n      <Link to={`/read-post/${id}`}>\r\n        <article>\r\n          <div className=\"popular-content\">\r\n            <div className=\"popular-title\">{title}</div>\r\n            <div className=\"popular-info row\">\r\n              <div className=\"created-date\">{date}</div>\r\n              <div className=\"writer\">{username}</div>\r\n            </div>\r\n            <div className=\"popular-desc\">\r\n              <div>{description}</div>\r\n              <div>{thumbnail}</div>\r\n            </div>\r\n          </div>\r\n        </article>\r\n      </Link>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Post;","import { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Post from './Post'\r\n\r\nclass PopularList extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className='popular-post-box'>\r\n        <div className='popular-header'>\r\n          <div className='title'>Popular post</div>\r\n          <div className='view-all'>\r\n            <Link to='/list-post/popular' >View all</Link>\r\n          </div>\r\n        </div>\r\n        <div className='contents-box row'>\r\n          {this.props.datas.map((data, index) => (\r\n            <div key={index}>\r\n              <Post data={data} />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PopularList;","import { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Post extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      readyPost: {\r\n        uid: \"\",\r\n        userName: \"\",\r\n        userPwd: \"\",\r\n        title: \"\",\r\n        description: \"\",\r\n        date: new Date(),\r\n        views: 0,\r\n      },\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ readyPost: this.props.data })\r\n  }\r\n\r\n  render() {\r\n\r\n    const id = this.state.readyPost.uid;\r\n    const title = this.state.readyPost.title;\r\n    const date = this.state.readyPost.date.valueOf();\r\n    const username = this.state.readyPost.userName;\r\n    const description = this.state.readyPost.description;\r\n    const thumbnail = this.state.readyPost.thumbnail;\r\n    return (\r\n      <Link to={'/read-post/' + id} >\r\n        <article className=\"recent-box row\">\r\n          <div className=\"thumbnail-box\">\r\n            {/* <img className=\"thumbnail col-3\" src=\"<%= recentPosts[i].thumbnail %>\" alt=\"썸네일\"/> */}\r\n          </div>\r\n          <div className=\"recent-content\">\r\n            <div className=\"recent-title\">{title}</div>\r\n            <div className=\"recent-info row\">\r\n              <div className=\"created-date\">{date}</div>\r\n              <div className=\"writer\">{username}</div>\r\n            </div>\r\n            <div className=\"recent-desc\">\r\n              {description}\r\n              <div>{thumbnail}</div>\r\n            </div>\r\n          </div>\r\n        </article>\r\n      </Link>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Post;","import { Component } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport Post from './Post'\r\n\r\nclass RecentList extends Component {\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"recent-post-box\">\r\n        <div className=\"recent-header row\">\r\n          <div className=\"title\"><h1>Recent post</h1></div>\r\n          <Link to='/list-post/recent' className=\"view-all\">View all</Link>\r\n        </div>\r\n        <div className=\"contents-box\">\r\n          {this.props.datas.map((data, index) => (\r\n            <span key={index}>\r\n              <Post data={data} />\r\n            </span>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default RecentList;","import { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { fas, faBars } from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\nclass Header extends Component {\r\n  constructor() {\r\n    super();\r\n    library.add(fas, faBars);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <header className='header'>\r\n        <nav>\r\n          <div className='header-box row'>\r\n            <div className='logo-box'>\r\n              <Link to='/' className=\"header-logo\" ><img src=\"/image/zero-w-logo_mini.png\" alt=\"logo-img\" /></Link>\r\n            </div>\r\n            <div className='nav-items row'>\r\n              {this.props.userName.length > 0 && <Link to='/create-post' className=\"nav-item\">게시물 작성</Link>}\r\n              <Link to='/join' className=\"nav-item\"> 회원가입 </Link>\r\n              {\r\n                this.props.userName.length > 0\r\n                  ? <span onClick={this.props.logout}>로그아웃</span>\r\n                  : <Link to='/login' className=\"nav-item\"> 로그인 </Link>\r\n              }\r\n              <FontAwesomeIcon className=\"nav-item\" icon={fas, faBars} size='2x' />\r\n            </div>\r\n          </div>\r\n        </nav>\r\n      </header>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import { Component } from \"react\";\r\n\r\nclass Headline extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"headline-box row\">\r\n        <div className='info-box'>\r\n          <article>\r\n            <div className=\"title\">영우 블로그</div>\r\n            <div className=\"description\">시간배분을..잘하자..</div>\r\n          </article>\r\n        </div>\r\n        <div className='avatar-box'>\r\n          <article className=\"user-avatar\">\r\n            <img src=\"image/me.jpg\" alt=\"아바타\"></img>\r\n          </article>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Headline;\r\n\r\n\r\n","import { Component } from 'react';\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { fas, faEnvelope } from '@fortawesome/free-solid-svg-icons'\r\nimport { fab, faGithub } from '@fortawesome/free-brands-svg-icons'\r\n\r\n\r\nclass Footer extends Component {\r\n  constructor() {\r\n    super();\r\n    library.add(fas, fab, faGithub, faEnvelope);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <footer>\r\n        <div className=\"footer\">\r\n          <div className=\"link\">\r\n            <a href=\"cxz5309@gmail.com\"><FontAwesomeIcon icon={fas, faEnvelope} size='3x' /></a>\r\n            <a href=\"https://github.com/cxz5309\"><FontAwesomeIcon icon={fab, faGithub} size='3x' /></a>\r\n          </div>\r\n        </div>\r\n      </footer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import { Component } from 'react';\r\nimport axios from 'axios';\r\nimport PopularList from '../components/Home/PopularList/PopularList';\r\nimport RecentList from '../components/Home/RecentList/RecentList';\r\nimport Header from '../components/Header';\r\nimport Headline from '../components/Home/Headline/Headline';\r\nimport Footer from '../components/Footer';\r\n\r\nclass Home extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      pList: [],\r\n      rList: [],\r\n      userName: '',\r\n    };\r\n  }\r\n\r\n\r\n  // date: \"2021. 9. 29.\"\r\n  // description: \"r\"\r\n  // thumbnail: \"image/zero-w-logo_mini\"\r\n  // title: \"q\"\r\n  // userName: \"w\"\r\n  // userPwd: \"e\"\r\n  // views: 0\r\n  // __v: 0\r\n  // uid: \"615472023afd20d3915a872f\"\r\n\r\n  componentDidMount() {\r\n    this.getMe();\r\n    this.getList();\r\n  }\r\n\r\n  logout = () => {\r\n    localStorage.removeItem(`token`)\r\n    alert('로그아웃되었습니다!');\r\n\r\n    window.location.reload();\r\n  }\r\n\r\n  getMe = async () => {\r\n    await axios.get('/api/me', {\r\n      headers: { authorization: `Bearer ${localStorage.getItem('token')}` },\r\n    })\r\n      .then((res) => {\r\n        if (res.data.user) {\r\n          console.log(res.data.user);\r\n          console.log('자동으로 로그인되었습니다!');\r\n          this.setState({ userName: res.data.user.userName });\r\n        }\r\n        else {\r\n          this.setState({ userName: '' });\r\n          throw new Error('알수 없는 오류가 있어 로그인되지 않았습니다.');\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ userName: '' });\r\n        console.log(error);\r\n        console.log('로그인이 필요합니다');\r\n      });\r\n  }\r\n\r\n  getList = async () => {\r\n    await axios.get('/api')\r\n      .then((res) => {\r\n        this.setState({ pList: res.data.popularList })\r\n        this.setState({ rList: res.data.recentList })\r\n      })\r\n      .catch((error) => {\r\n        if (error.response) {\r\n          alert(error.response.data.message);\r\n          this.props.history.push(\"/\")\r\n        }\r\n        else {\r\n          console.log(error);\r\n          alert('페이지 로딩 실패!');\r\n          this.props.history.push(\"/\")\r\n        }\r\n      });\r\n  }\r\n\r\n  render() {\r\n    let popularData = [...this.state.pList];\r\n    let recentData = [...this.state.rList];\r\n    const userName = this.state.userName;\r\n    return (\r\n      <div>\r\n        <Header userName={userName} logout={this.logout} />\r\n        <main>\r\n          <section className=\"headline\">\r\n            <Headline />\r\n          </section>\r\n          <section className=\"popular-post\">\r\n            <PopularList datas={popularData} />\r\n          </section>\r\n          <section className=\"recent-post\">\r\n            <RecentList datas={recentData} />\r\n          </section>\r\n        </main>\r\n        <Footer />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport queryString from 'query-string';\r\n\r\nconst Home = ({location, match}) => {\r\n\r\n  const query = queryString.parse(location.search);\r\n  console.log(location.search);\r\n  console.log(query);\r\n  return (\r\n    <div>\r\n      <h2>\r\n        About {match.params.name}\r\n      </h2>\r\n      <span> {query.detail && 'detail: blahblah'}</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home;","import React from \"react\";\r\n\r\nconst Post = ({ match }) => {\r\n  return (\r\n    <div>\r\n      포스트 {match.params.id}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from 'react';\r\nimport { Link, Route } from 'react-router-dom';\r\nimport Post from './Post'; \r\n\r\nconst Posts = ({match}) => {\r\n    return (\r\n        <div>\r\n           <h2>Post List</h2> \r\n           <ul>\r\n                <li><Link to={`${match.url}/1`}>Post #1</Link></li>\r\n                <li><Link to={`${match.url}/2`}>Post #2</Link></li>\r\n                <li><Link to={`${match.url}/3`}>Post #3</Link></li>\r\n                <li><Link to={`${match.url}/4`}>Post #4</Link></li>\r\n           </ul>\r\n           <Route exact path={match.url} render={()=>(<h3>Please select any post</h3>)}/>\r\n           <Route path={`${match.url}/:id`} component={Post}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Posts;","import { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nclass CreatePost extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      readyPost: {\r\n        uid: \"\",\r\n        userName: \"\",\r\n        userPwd: \"\",\r\n        title: \"\",\r\n        description: \"\",\r\n        date: '',\r\n        views: 0,\r\n        thumbnailUrl: '',\r\n      },\r\n      thumbnail: null\r\n    };\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getMe();\r\n  };\r\n\r\n  getMe = async () => {\r\n    await axios.get('/api/me', {\r\n      headers: { authorization: `Bearer ${localStorage.getItem('token')}` },\r\n    })\r\n      .then((res) => {\r\n        if (res.data.user) {\r\n          console.log('자동으로 로그인되었습니다!');\r\n          this.setState({ userName: res.data.user.userName });\r\n        }\r\n        else {\r\n          this.setState({ userName: '' });\r\n          throw new Error('알수 없는 오류가 있어 로그인되지 않았습니다.');\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ userName: '' });\r\n        console.log(error);\r\n        alert('로그인이 필요합니다. 메인 페이지로 이동합니다.');\r\n        this.props.history.push(\"/\")\r\n      });\r\n  }\r\n\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const payload = this.state.readyPost;\r\n    let data = new FormData();\r\n    data.append(\"file\", this.state.thumbnail);\r\n    data.set(\"title\", payload.title);\r\n    data.set(\"description\", payload.description);\r\n    data.set(\"userName\", payload.userName);\r\n    data.set(\"userPwd\", payload.userPwd);\r\n    console.log(data);\r\n    await axios\r\n      .post('/api/create-post', data)\r\n      .then((res) => {\r\n        alert('포스트 성공!');\r\n        this.props.history.push(\"/\")\r\n      })\r\n      .catch((error) => {\r\n        if (error.response) {\r\n          alert(error.response.data.message);\r\n        }\r\n        else {\r\n          console.log(error);\r\n          alert('포스트 실패!');\r\n        }\r\n        this.props.history.push(\"/\")\r\n      });\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    let readyPost = { ...this.state.readyPost }\r\n    readyPost[e.target.name] = e.target.value;\r\n    this.setState({ readyPost })\r\n  };\r\n\r\n  onImgChange = (e) => {\r\n    this.setState({ thumbnail: e.target.files[0] })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <main>\r\n          <div>\r\n            <section className='create-post-container'>\r\n              <div className=\"create-post-group\">\r\n                <form onSubmit={this.handleSubmit}>\r\n                  <label className=\"form-label\">제목</label>\r\n                  <input type=\"text\" id=\"title\" className=\"form-control\" name=\"title\" onChange={this.handleChange}></input>\r\n                  <label className=\"form-label\">작성자</label>\r\n                  <input type=\"text\" id=\"writer\" className=\"form-control\" name=\"userName\" onChange={this.handleChange}></input>\r\n                  <label className=\"form-label\">비밀번호</label>\r\n                  <input type=\"text\" id=\"password\" className=\"form-control\" name=\"userPwd\" onChange={this.handleChange}></input>\r\n                  <label className=\"form-label\">내용</label>\r\n                  <textarea id=\"description\" className=\"form-control\" name=\"description\" onChange={this.handleChange}></textarea>\r\n                  <label className=\"form-label\">썸네일</label>\r\n                  <div className=\"input-group mb-3\">\r\n                    <input type=\"file\" className=\"form-control\" id=\"thumbnail\" name=\"thumbnail\" accept='image/jpg, image/png, image/jpeg' onChange={this.onImgChange}></input>\r\n                  </div>\r\n                  <div>\r\n                    <button type=\"submit\" className=\"btn btn-primary mb-3\" >게시물 작성</button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </section>\r\n          </div>\r\n        </main>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CreatePost;","import { Component } from 'react';\r\nimport axios from 'axios';\r\nclass UpdatePost extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      readyPost: {\r\n        uid: \"\",\r\n        userName: \"\",\r\n        userPwd: \"\",\r\n        title: \"\",\r\n        description: \"\",\r\n        date: new Date(),\r\n        views: 0,\r\n      },\r\n      userName: '',\r\n      submitType: 'update',\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getMe();\r\n    this.getPost();\r\n  };\r\n\r\n\r\n  getMe = async () => {\r\n    await axios.get('/api/me', {\r\n      headers: { authorization: `Bearer ${localStorage.getItem('token')}` },\r\n    })\r\n      .then((res) => {\r\n        if (res.data.user) {\r\n          console.log('자동으로 로그인되었습니다!');\r\n          this.setState({ userName: res.data.user.userName });\r\n        }\r\n        else {\r\n          this.setState({ userName: '' });\r\n          throw new Error('알수 없는 오류가 있어 로그인되지 않았습니다.');\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ userName: '' });\r\n        console.log(error);\r\n        alert('로그인이 필요합니다. 메인 페이지로 이동합니다.');\r\n        this.props.history.push(\"/\")\r\n      });\r\n  }\r\n\r\n  getPost = async () => {\r\n    try {\r\n      await axios.get('/api/update-post/' + this.props.match.params.id)\r\n        .then((res) => {\r\n          this.setState({ readyPost: res.data.post });\r\n          let readyPost = { ...this.state.readyPost }\r\n          readyPost['userPwd'] = '';\r\n          this.setState({ readyPost })\r\n        })\r\n    }\r\n    catch (error) {\r\n      console.log(error);\r\n      alert('페이지 로딩 실패!');\r\n      this.props.history.push(\"/\")\r\n    }\r\n  }\r\n\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    let payload = this.state.readyPost;\r\n\r\n    if (this.state.submitType === 'update') {\r\n      await axios\r\n        .patch('/api/update-post/' + this.props.match.params.id, payload)\r\n        .then((res) => {\r\n          alert('업데이트 성공!');\r\n          this.props.history.push(\"/\")\r\n        }).catch((error) => {\r\n          if (error.response) {\r\n            alert(error.response.data.message);\r\n            this.props.history.push(\"/\")\r\n          }\r\n          else {\r\n            console.log(error);\r\n            alert('업데이트 실패!');\r\n            this.props.history.push(\"/\")\r\n          }\r\n        });\r\n    }\r\n    else {\r\n      const userPwd = this.state.readyPost.userPwd;\r\n      await axios\r\n        .delete('/api/delete-post/' + this.props.match.params.id, {\r\n          data: {\r\n            userPwd,\r\n          }\r\n        })\r\n        .then((res) => {\r\n          alert('삭제 성공!');\r\n          this.props.history.push(\"/\")\r\n        })\r\n        .catch((error) => {\r\n          if (error.response) {\r\n            alert(error.response.data.message);\r\n            this.props.history.push(\"/\")\r\n          }\r\n          else {\r\n            console.log(error);\r\n            alert('삭제 실패!');\r\n            this.props.history.push(\"/\")\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    let readyPost = { ...this.state.readyPost }\r\n    readyPost[e.target.name] = e.target.value;\r\n    this.setState({ readyPost })\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <main>\r\n          <section className='update-post-container'>\r\n            <div className=\"update-post-group\">\r\n              <form onSubmit={this.handleSubmit}>\r\n                <label className=\"form-label\">제목</label>\r\n                <input type=\"text\" id=\"title\" className=\"form-control\" name=\"title\" value={this.state.readyPost.title} onChange={this.handleChange}></input>\r\n\r\n                <label className=\"form-label\">작성자</label>\r\n                <input type=\"text\" id=\"writer\" className=\"form-control\" name=\"userName\" value={this.state.readyPost.userName} onChange={this.handleChange}></input>\r\n\r\n                <label className=\"form-label\">비밀번호</label>\r\n                <input type=\"text\" id=\"password\" className=\"form-control\" name=\"userPwd\" value={this.state.readyPost.userPwd} onChange={this.handleChange}></input>\r\n\r\n                <label className=\"form-label\">내용</label>\r\n                <textarea id=\"description\" className=\"form-control\" name=\"description\" value={this.state.readyPost.description} onChange={this.handleChange}></textarea>\r\n\r\n                {/* <label className=\"form-label\">썸네일</label> */}\r\n                {/* <div className=\"input-group mb-3\">\r\n              <input type=\"file\" className=\"form-control\" id=\"thumbnail\" name=\"thumbnail\" accept='image/jpg, image/png, image/jpeg' ></input>\r\n            </div> */}\r\n                <div>\r\n                  <button type=\"submit\" className=\"btn btn-primary mb-3\" onClick={() => { this.setState({ submitType: 'update' }) }}>게시물 수정</button>\r\n                  <button type=\"submit\" className=\"btn btn-primary mb-3\" onClick={() => { this.setState({ submitType: 'delete' }) }}>게시물 삭제</button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </section>\r\n        </main>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default UpdatePost;","import axios from 'axios';\r\nimport { Component } from \"react\";\r\n\r\nclass Comment extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      commentState: 'ready',\r\n      readyUpdateContent: '',\r\n    }\r\n  }\r\n\r\n  handleClick = (state) => {\r\n    this.setState({ commentState: state });\r\n    if (state === 'update')\r\n      this.setState({ readyUpdateContent: this.props.comment.contents })\r\n  }\r\n\r\n  submitUpdate = async () => {\r\n    const payload = this.state.readyUpdateContent;\r\n    const token = localStorage.getItem('token');\r\n    if (payload.length === 0) {\r\n      alert('댓글 내용을 입력해주세요');\r\n      return;\r\n    }\r\n    await axios.patch('/api/edit-comments/' + this.props.comment.uid,\r\n      { contents: payload },\r\n      { headers: { authorization: `Bearer ${token}` } })\r\n      .then((res) => {\r\n        alert('코멘트가 수정되었습니다!');\r\n        window.location.reload();\r\n      }).catch((error) => {\r\n        if (error.response) {\r\n          console.log(error.response);\r\n          alert(error.response.data.message)\r\n        }\r\n        else {\r\n          alert(error)\r\n        }\r\n      });\r\n  }\r\n  submitDelete = async () => {\r\n    const payload = this.state.readyUpdateContent;\r\n    const token = localStorage.getItem('token');\r\n\r\n    await axios.delete('/api/delete-comments/' + this.props.comment.uid,\r\n      {\r\n        contents: payload,\r\n        headers: { authorization: `Bearer ${token}` }\r\n      })\r\n      .then((res) => {\r\n        alert('코멘트가 삭제되었습니다!');\r\n        window.location.reload();\r\n      }).catch((error) => {\r\n        if (error.response) {\r\n          console.log(error.response);\r\n          alert(error.response.data.message)\r\n        }\r\n        else {\r\n          alert(error)\r\n        }\r\n      });\r\n  }\r\n\r\n  renderSwitch(param) {\r\n    switch (param) {\r\n      default:\r\n      case 'ready':\r\n        return (\r\n          <div>\r\n            <div className=\"comment\">\r\n              <div className=\"comment-writer\">{this.props.comment.writer}</div>\r\n              <div className=\"comment-date\">{this.props.comment.date}</div><br />\r\n              <div className=\"comment-content\">{this.props.comment.contents}</div>\r\n            </div>\r\n            {this.props.userName === this.props.comment.writer &&\r\n              <div>\r\n                <button onClick={() => this.handleClick('update')}>수정</button>\r\n                <button onClick={() => this.handleClick('delete')}>삭제</button>\r\n              </div>\r\n            }\r\n          </div>\r\n        )\r\n      case 'update':\r\n        return (\r\n          <div>\r\n            <div className=\"comment\">\r\n              <div className=\"comment-writer\">{this.props.comment.writer}</div>\r\n              <div className=\"comment-date\">{this.props.comment.date}</div><br />\r\n              <input\r\n                className=\"comment-content\"\r\n                onChange={(e) => this.setState({ readyUpdateContent: e.target.value })}\r\n                value={this.state.readyUpdateContent}>\r\n              </input>\r\n            </div>\r\n            {this.props.userName === this.props.comment.writer &&\r\n              <div>\r\n                <button onClick={() => this.handleClick('ready')}>수정 취소</button>\r\n                <button onClick={() => this.submitUpdate()}>수정 확인</button>\r\n              </div>\r\n            }\r\n          </div>\r\n        )\r\n      case 'delete':\r\n        return (\r\n          <div>\r\n            <div className=\"comment\">\r\n              <div className=\"comment-writer\">{this.props.comment.writer}</div>\r\n              <div className=\"comment-date\">{this.props.comment.date}</div><br />\r\n              <div className=\"comment-content\">{this.props.comment.contents}</div>\r\n            </div>\r\n            {this.props.userName === this.props.comment.writer &&\r\n              <div>\r\n                <button onClick={() => this.handleClick('ready')}>삭제 취소</button>\r\n                <button onClick={() => this.submitDelete()}>삭제 확인</button>\r\n              </div>\r\n            }\r\n          </div>\r\n        )\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {\r\n          this.renderSwitch(this.state.commentState)\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Comment;","import { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Header from '../components/Header';\r\nimport Comment from '../components/Comment/Comment';\r\nimport Footer from '../components/Footer';\r\n\r\nclass DetailPost extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      postId: '',\r\n      userName: '',\r\n      readyPost: {\r\n        uid: \"\",\r\n        userName: \"\",\r\n        userPwd: \"\",\r\n        title: \"\",\r\n        description: \"\",\r\n        date: new Date(),\r\n        views: 0,\r\n      },\r\n      readyComments: [],\r\n      myComment: '',\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getMe();\r\n    this.setState({ postId: this.props.match.params.id });\r\n    this.getPost();\r\n    this.getComments();\r\n  };\r\n\r\n  logout = () => {\r\n    localStorage.removeItem(`token`)\r\n    alert('로그아웃되었습니다!');\r\n\r\n    window.location.reload();\r\n  }\r\n\r\n  getMe = async () => {\r\n    await axios.get('/api/me', {\r\n      headers: { authorization: `Bearer ${localStorage.getItem('token')}` },\r\n    })\r\n      .then((res) => {\r\n        if (res.data.user) {\r\n          console.log('자동으로 로그인되었습니다!');\r\n          this.setState({ userName: res.data.user.userName });\r\n        }\r\n        else {\r\n          this.setState({ userName: '' });\r\n          throw new Error('알수 없는 오류가 있어 로그인되지 않았습니다.');\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ userName: '' });\r\n        console.log(error);\r\n        console.log('로그인이 필요합니다');\r\n      });\r\n  }\r\n\r\n  getPost = async () => {\r\n    await axios.get('/api/read-post/' + this.props.match.params.id)\r\n      .then((res) => {\r\n        this.setState({ readyPost: res.data.post });\r\n      })\r\n      .catch((error) => {\r\n        if (error.response) {\r\n          alert(error.response.data.message);\r\n        }\r\n        else {\r\n          console.log(error);\r\n          alert('페이지 로딩 실패!');\r\n        }\r\n        this.props.history.push(\"/\")\r\n      });\r\n  }\r\n\r\n  getComments = async () => {\r\n    await axios.get('/api/comments/' + this.props.match.params.id)\r\n      .then((res) => {\r\n        this.setState({ readyComments: res.data.comments });\r\n      }).catch((error) => {\r\n        console.log('오류로 인해 댓글이 표시되지 않습니다.')\r\n        this.setState({ readyComments: [] });\r\n        if (error.response) {\r\n          console.log(error.response.data.message);\r\n        }\r\n        else {\r\n          console.log(error);\r\n        }\r\n      })\r\n  }\r\n\r\n\r\n  handleClick = () => {\r\n    this.props.history.push('/update-post/' + this.state.postId);\r\n  }\r\n\r\n  CreateComment = async (e) => {\r\n    e.preventDefault();\r\n    let payload = this.state.myComment;\r\n    const token = localStorage.getItem('token');\r\n    if (payload.length === 0) {\r\n      alert('댓글 내용을 입력해주세요');\r\n      return;\r\n    }\r\n    await axios\r\n      .post('/api/create-comment/' + this.props.match.params.id,\r\n        { contents: payload },\r\n        { headers: { authorization: `Bearer ${token}` } })\r\n      .then((res) => {\r\n        alert('댓글 생성!');\r\n        window.location.reload();\r\n      }).catch((error) => {\r\n        if (error.response) {\r\n          alert(error.response.data.message);\r\n        }\r\n        else {\r\n          console.log(error);\r\n          alert('댓글 실패!');\r\n        }\r\n        this.props.history.push(\"/login\");\r\n      });\r\n  }\r\n\r\n  RemoveThisComment = () => {\r\n    this.setState({\r\n      myComment: ''\r\n    });\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value, // <- 변경 후\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const title = this.state.readyPost.title;\r\n    const date = this.state.readyPost.date.valueOf();\r\n    const postUserName = this.state.readyPost.userName;\r\n    const description = this.state.readyPost.description;\r\n    const views = this.state.readyPost.views;\r\n    let userName = this.state.userName;\r\n    let comments = this.state.readyComments === undefined ? [] : this.state.readyComments\r\n\r\n    return (\r\n      <div>\r\n        <Header userName={userName} logout={this.logout} />\r\n        <main>\r\n          <section>\r\n            <div className=\"read-page\">\r\n              <div className=\"content-header\">\r\n                <h1 className=\"read-title\">{title}</h1>\r\n                <div className=\"read-info row\">\r\n                  <div className=\"created-date\">{date}</div>\r\n                  <div className=\"writer\">{postUserName}</div>\r\n                </div>\r\n              </div>\r\n              <div className=\"read-content\">\r\n                <div className=\"desc\">{description}</div>\r\n                <div className=\"views\">조회수 : {views}</div>\r\n              </div>\r\n              {userName.length > 0 && (\r\n                <div className=\"btn\">\r\n                  <input type=\"button\" onClick={this.handleClick} value=\"게시글 수정 & 삭제\"></input>\r\n                </div>\r\n              )}\r\n              <div className=\"comments\">\r\n                <div className=\"myComment\">\r\n                  <input type=\"text\" name=\"myComment\" id=\"content\" onChange={this.handleChange} value={this.state.myComment} />\r\n                  <button onClick={this.RemoveThisComment}>취소</button>\r\n                  <button onClick={this.CreateComment}>댓글</button>\r\n                </div>\r\n                <div>{comments.length} 개의 코멘트가 있습니다.</div>\r\n                {comments.map((data, index) => (\r\n                  <div key={index}>\r\n                    <Comment userName={userName} comment={data} />\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </section>\r\n        </main>\r\n        <Footer />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DetailPost;","import { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Post extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      readyPost: {\r\n        uid: \"\",\r\n        userName: \"\",\r\n        userPwd: \"\",\r\n        title: \"\",\r\n        description: \"\",\r\n        date: \"\",\r\n        views: 0,\r\n      },\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ readyPost: this.props.data })\r\n  }\r\n\r\n  render() {\r\n    const id = this.state.readyPost.uid;\r\n    const title = this.state.readyPost.title;\r\n    const date = this.state.readyPost.date;\r\n    const username = this.state.readyPost.userName;\r\n    const description = this.state.readyPost.description;\r\n    return (\r\n      <Link to={'/read-post/' + id} >\r\n        <article className=\"row\">\r\n          {/* <div className=\"thumbnail-box col-3\">\r\n            <img className=\"thumbnail\" src=\"<%= contents[i].thumbnail %>\" alt=\"썸네일\" className=\"col-3\"></img>\r\n          </div> */}\r\n          <div className=\"list-content col-9\">\r\n            <div className=\"list-title\">{title}</div>\r\n            <div className=\"list-info row\">\r\n              <div className=\"created-date col-3\">{date}</div>\r\n              <div className=\"writer col-9\">{username}</div>\r\n            </div>\r\n            <div className=\"list-desc\">\r\n              {description}\r\n            </div>\r\n          </div>\r\n        </article>\r\n      </Link>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Post;","import { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Header from '../components/Header';\r\nimport Footer from '../components/Footer';\r\nimport Post from '../components/ListPost/Post';\r\n\r\nclass ListPost extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      postList: [],\r\n      userName: '',\r\n    };\r\n  }\r\n\r\n  // date: \"2021. 9. 29.\"\r\n  // description: \"r\"\r\n  // thumbnail: \"image/zero-w-logo_mini\"\r\n  // title: \"q\"\r\n  // userName: \"w\"\r\n  // userPwd: \"e\"\r\n  // views: 0\r\n  // __v: 0\r\n  // uid: \"615472023afd20d3915a872f\"\r\n\r\n  componentDidMount() {\r\n    this.getMe();\r\n    this.getList();\r\n  }\r\n\r\n  logout = () => {\r\n    localStorage.removeItem(`token`)\r\n    alert('로그아웃되었습니다!');\r\n\r\n    window.location.reload();\r\n  }\r\n\r\n  getMe = async () => {\r\n    await axios.get('/api/me', {\r\n      headers: { authorization: `Bearer ${localStorage.getItem('token')}` },\r\n    })\r\n      .then((res) => {\r\n        if (res.data.user) {\r\n          console.log(res.data.user);\r\n          console.log('자동으로 로그인되었습니다!');\r\n          this.setState({ userName: res.data.user.userName });\r\n        }\r\n        else {\r\n          this.setState({ userName: '' });\r\n          throw new Error('알수 없는 오류가 있어 로그인되지 않았습니다.');\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ userName: '' });\r\n        console.log(error);\r\n        console.log('로그인이 필요합니다');\r\n      });\r\n  }\r\n\r\n  getList = async () => {\r\n    await axios.get('/api/list-post/' + this.props.match.params.sortType)\r\n      .then((res) => {\r\n        console.log(res);\r\n        this.setState({ postList: res.data.postList })\r\n      })\r\n      .catch((error) => {\r\n        if (error.response) {\r\n          alert(error.response.data.message);\r\n          this.props.history.push(\"/\")\r\n        }\r\n        else {\r\n          console.log(error);\r\n          alert('페이지 로딩 실패!');\r\n          this.props.history.push(\"/\")\r\n        }\r\n      });\r\n  }\r\n\r\n  render() {\r\n    let postList = [...this.state.postList];\r\n    const userName = this.state.userName;\r\n    return (\r\n      <div>\r\n        <Header userName={userName} logout={this.logout} />\r\n        <main>\r\n          <section className=\"recent-post\">\r\n            <div className=\"content-header\">\r\n              <h1 className=\"page-title\">{this.props.match.params.id}</h1>\r\n            </div>\r\n            <div className=\"list-contents\">\r\n              <div className=\"contents\">\r\n                <div className=\"contents-box\">\r\n                  {postList.map((data, index) => (\r\n                    <div key={index}>\r\n                      <Post data={data} />\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n        </main>\r\n        <Footer />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ListPost;","import { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nclass Join extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      readyUser: {\r\n        userName: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n      },\r\n    };\r\n  }\r\n\r\n\r\n\r\n  componentDidMount() {\r\n    this.getMe();\r\n  }\r\n  getMe = async () => {\r\n    await axios.get('/api/me', {\r\n      headers: { authorization: `Bearer ${localStorage.getItem('token')}` },\r\n    })\r\n      .then((res) => {\r\n        if (res.data.user) {\r\n          alert('이미 로그인되어있어 메인 페이지로 이동합니다.');\r\n          this.props.history.push(\"/\")\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        console.log('로그인이 필요합니다');\r\n      });\r\n  }\r\n\r\n  register = async (e) => {\r\n    e.preventDefault();\r\n    const payload = this.state.readyUser;\r\n\r\n    await axios.post('/api/join', payload)\r\n      .then((res) => {\r\n        alert('회원가입 성공!');\r\n        this.props.history.push(\"/login\")\r\n      })\r\n      .catch((error) => {\r\n        if (error.response) {\r\n          console.log(error.response);\r\n          alert(error.response.data.message)\r\n        }\r\n        else {\r\n          alert(error)\r\n        }\r\n      })\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    let readyUser = { ...this.state.readyUser }\r\n    readyUser[e.target.name] = e.target.value;\r\n    this.setState({ readyUser })\r\n  };\r\n\r\n\r\n  render() {\r\n    return (\r\n      <main>\r\n        <div className='join-container'>\r\n          <div>\r\n            <h1>회원가입</h1>\r\n          </div>\r\n          <div>\r\n            <div className=\"join-group\">\r\n              <form>\r\n                <label>사용자 닉네임</label><br />\r\n                <input type=\"text\" name=\"userName\" placeholder=\"3자 이상, 알파벳 대소문자\" className=\"sign-input\" onChange={this.handleChange}></input><br />\r\n                <label>비밀번호</label><br />\r\n                <input type=\"password\" name=\"password\" placeholder=\"4자 이상\" className=\"sign-input\" onChange={this.handleChange}></input><br />\r\n                <label>비밀번호를 한번 더 입력해주세요.</label><br />\r\n                <input type=\"password\" name=\"confirmPassword\" placeholder=\"Confirm Password\" className=\"sign-input\" onChange={this.handleChange}></input><br />\r\n              </form>\r\n            </div>\r\n          </div>\r\n          <button onClick={this.register} className=\"box-btn\">회원가입</button>\r\n        </div>\r\n      </main>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Join;","import { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      readyUser: {\r\n        userName: \"\",\r\n        password: \"\",\r\n      }\r\n    };\r\n  }\r\n\r\n\r\n\r\n  componentDidMount() {\r\n    this.getMe();\r\n  }\r\n  getMe = async () => {\r\n    await axios.get('/api/me', {\r\n      headers: { authorization: `Bearer ${localStorage.getItem('token')}` },\r\n    }).then((res) => {\r\n      alert('이미 로그인되어있어 메인 페이지로 이동합니다.');\r\n      this.props.history.push(\"/\")\r\n    })\r\n  }\r\n\r\n  login = async (e) => {\r\n    e.preventDefault();\r\n    const payload = this.state.readyUser;\r\n    await axios.post('/api/login', payload)\r\n      .then((res) => {\r\n        localStorage.setItem('token', res.data.token);\r\n        alert('로그인되었습니다!');\r\n        this.props.history.push(\"/\")\r\n      })\r\n      .catch((error) => {\r\n        if (error.response) {\r\n          console.log(error.response);\r\n          alert(error.response.data.message)\r\n        }\r\n        else {\r\n          console.log(error);\r\n          alert('로그인에 실패했습니다!')\r\n        }\r\n      });\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    let readyUser = { ...this.state.readyUser }\r\n    readyUser[e.target.name] = e.target.value;\r\n    this.setState({ readyUser })\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <main>\r\n        <div className='login-container'>\r\n          <div>\r\n            <h1>로그인</h1>\r\n          </div>\r\n          <form>\r\n            <div>\r\n              <div className=\"login-group\">\r\n                <form>\r\n                  <label>닉네임</label><br />\r\n                  <input type=\"username\" id=\"userName\" name=\"userName\" onChange={this.handleChange}></input><br /><br />\r\n                  <label>비밀번호</label><br />\r\n                  <input type=\"password\" id=\"userpw\" name=\"password\" onChange={this.handleChange}></input><br /><br />\r\n                </form>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <button type=\"submit\" onClick={this.login} className=\"login-box\">로그인</button>\r\n              <Link to=\"/join\"><button>회원가입</button></Link>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </main>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Login;","import { Component } from 'react';\r\nimport { Route, Switch, BrowserRouter } from 'react-router-dom'\r\nimport Home from './pages/Home';\r\nimport About from './pages/About'\r\nimport Posts from './pages/Posts'\r\nimport CreatePost from './pages/CreatePost';\r\nimport UpdatePost from './pages/UpdatePost';\r\nimport DetailPost from './pages/DetailPost';\r\nimport ListPost from './pages/ListPost';\r\nimport Join from './pages/Join';\r\nimport Login from './pages/Login';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <div>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route exact path=\"/join\" component={Join} />\r\n          <Route exact path=\"/login\" component={Login} />\r\n          <Route exact path=\"/create-post\" component={CreatePost} />\r\n          <Route exact path=\"/update-post/:id\" component={UpdatePost} />\r\n          <Route exact path=\"/read-post/:id\" component={DetailPost} />\r\n          <Route exact path=\"/list-post/:sortType\" component={ListPost} />\r\n          <Switch>\r\n            <Route path=\"/about/:name\" component={About} />\r\n            <Route path=\"/about\" component={About} />\r\n          </Switch>\r\n          <Route path=\"/posts\" component={Posts} />\r\n        </div>\r\n      </BrowserRouter>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(<App/>, \r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}